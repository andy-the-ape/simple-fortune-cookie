name: Main workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }} 
  docker_token: ${{ secrets.DOCKER_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone down repository
        uses: actions/checkout@v4
      - name: Build Go frontend
        working-directory: ./frontend
        run: go build
      - name: Build Go backend
        working-directory: ./backend
        run: go build
      - name: Test
        working-directory: ./frontend
        run: go test
      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build and push frontend Docker image
        run: |
          docker build -t andytheape/fortune-cookie-frontend:latest -f ./frontend/Dockerfile ./frontend
          docker push andytheape/fortune-cookie-frontend:latest
      - name: Build and push backend Docker image
        run: |
          docker build -t andytheape/fortune-cookie-backend:latest -f ./backend/Dockerfile ./backend
          docker push andytheape/fortune-cookie-backend:latest
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
  Deploy-Docker-Compose:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Pull frontend Docker image
        run: |
          docker pull andytheape/fortune-cookie-frontend:latest
      - name: Pull backend Docker image
        run: |
          docker pull andytheape/fortune-cookie-backend:latest
      - name: Deploy using Docker Compose
        run: |
          docker compose up -d

  Deploy-Kubernetes-Cluster:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      - name: Deploy to Kubernetes
        run: kubectl --kubeconfig kubeconfig apply -f kubernetes/
  
  Test-Availability:
    runs-on: ubuntu-latest
    needs: [Deploy-Kubernetes-Cluster]
    steps:
      - name: Test Application Availability
        run: ./test-availability.sh
